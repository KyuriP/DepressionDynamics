---
title: "helius"
format:
  html:
    grid: 
      body-width: 3000px
      sidebar-width: 200px
      margin-width: 200px
    toc: true
editor: visual
jupyter: python3
---

```{r}
library(haven)

helius1 <- read_sav("data/231107_HELIUS data Kyuri Park.sav")
helius2 <- read_sav("data/HELIUS_itemscores.sav")

helius2$Cov1_WlbvRecent1
library(janitor)
All.list <- list(helius1, helius2)
compare_df_cols(All.list)


skimr::skim(helius2)

library("labelled")
res1 <- val_labels(helius1)
names(res1)

res2 <- val_labels(helius2)
names(res2)
```


```{python}
import matplotlib.pyplot as plt
import numpy as np

ax = plt.figure().add_subplot(projection='3d')

# Plot a sin curve using the x and y axes.
x = np.linspace(0, 1, 100)
y = np.sin(x * 2 * np.pi) / 2 + 0.5
ax.plot(x, y, zs=0, zdir='z', label='curve in (x, y)')

# Plot scatterplot data (20 2D points per colour) on the x and z axes.
colors = ('r', 'g', 'b', 'k')

# Fixing random state for reproducibility
np.random.seed(19680801)

x = np.random.sample(20 * len(colors))
y = np.random.sample(20 * len(colors))
c_list = []
for c in colors:
    c_list.extend([c] * 20)
# By using zdir='y', the y value of these points is fixed to the zs value 0
# and the (x, y) points are plotted on the x and z axes.
ax.scatter(x, y, zs=0, zdir='y', c=c_list, label='points in (x, z)')

# Make legend, set axes limits and labels
ax.legend()
ax.set_xlim(0, 1)
ax.set_ylim(0, 1)
ax.set_zlim(0, 1)
ax.set_xlabel('X')
ax.set_ylabel('Y')
ax.set_zlabel('Z')

# Customize the view angle so it's easier to see that the scatter points lie
# on the plane y=0
ax.view_init(elev=20, azim=-35, roll=0)

plt.show()
```

